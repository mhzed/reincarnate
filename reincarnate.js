// Generated by CoffeeScript 1.8.0
(function() {
  var fs, os, path, reincarnate, spawn;

  path = require("path");

  fs = require("fs");

  os = require("os");

  spawn = require("child_process").spawn;

  module.exports = reincarnate = {
    restart: function(restartCmd) {
      var a, cps, scriptFile;
      if (restartCmd == null) {
        restartCmd = ((function() {
          var _i, _len, _ref, _results;
          _ref = process.argv;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            a = _ref[_i];
            _results.push("\"" + a + "\"");
          }
          return _results;
        })()).join(' ');
      }
      scriptFile = reincarnate._scriptFile();
      if (os.platform() === 'win32' || os.platform() === 'win64') {
        fs.writeFileSync(scriptFile, "@echo off\n:loop\ntasklist /FI \"PID eq " + process.pid + "\" | find \":\"\nif %ERRORLEVEL% neq 0 (\n    timeout /t 1\n    goto :loop\n)\nstart  \"\" /B " + restartCmd);
        return cps = spawn("cmd.exe", ["/C", "start", "/B", "/MIN", "cmd", "/c", scriptFile], {
          detached: true,
          stdio: 'ignore'
        });
      } else {
        fs.writeFileSync(scriptFile, "#!/bin/sh\nwhile kill -0 " + process.pid + " > /dev/null 2>&1\ndo\n  sleep 0.5\ndone\n" + restartCmd);
        fs.chmodSync(scriptFile, '0755');
        cps = spawn(scriptFile, [], {
          detached: true,
          stdio: 'inherit'
        });
        return cps.unref();
      }
    },
    afterRestart: function() {
      var scriptFile;
      scriptFile = reincarnate._scriptFile();
      if (fs.existsSync(scriptFile)) {
        fs.unlinkSync(scriptFile);
        return 'restarted';
      } else {
        return 'na';
      }
    },
    _scriptFile: function() {
      var scriptFile;
      if (os.platform() === 'win32' || os.platform() === 'win64') {
        return scriptFile = path.resolve(process.cwd(), "__reincarnate.bat");
      } else {
        return scriptFile = path.resolve(process.cwd(), "__reincarnate.sh");
      }
    }
  };

}).call(this);

//# sourceMappingURL=reincarnate.js.map
